/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:helvetica;src:url(fonts/HelveticaNeueCyr-Light.ttf) format("truetype"),url(fonts/HelveticaNeueCyr-Light.woff) format("woff");font-weight:400;font-style:normal;font-stretch:normal}h1{margin:0;font-family:helvetica,sans-serif;font-weight:400}h2{margin:0;font-family:helvetica,sans-serif;font-weight:400}h3{margin:0;font-family:helvetica,sans-serif;font-weight:400}h4{margin:0;font-family:helvetica,sans-serif;font-weight:400}h5{margin:0;font-family:helvetica,sans-serif;font-weight:400}h6{margin:0;font-family:helvetica,sans-serif;font-weight:400}.button{display:inline-block}.button-check{background-color:#5793e8;border-radius:20px;border:1px solid #5793e8;font-size:14px;color:#fff;padding:25px 50px;text-transform:uppercase}.button-check:hover{background-color:#2a76e2}.lead-button{background-color:#fafafa;border-radius:20px;border:1px solid #fafafa;font-size:14px;font-weight:700;color:#5fb0ee;padding:15px 20px;text-transform:uppercase;margin:0 10px 20px}.lead-button:hover{background-color:#e1e1e1;border:1px solid #e1e1e1}.lead-button.inverted{color:#fafafa;background-color:#5fb0ee;border:1px solid #5fb0ee}.lead-button.inverted:hover{background-color:#3199e9;border:1px solid #3199e9}.container{width:100%;margin:0 auto}@media (min-width:1300px){.container{max-width:1200px}}body{font-size:16px;font-family:helvetica,sans-serif;color:#333}p{margin:0 0 1em}p:last-child{margin:0}a{color:#333;text-decoration:none;cursor:pointer}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}.header-wrapper{position:relative;width:100%;background-color:#fff;z-index:50}.header-wrapper:after{content:'';position:absolute;bottom:0;height:1px;width:100%;background-color:rgba(51,51,51,.15)}.headroom{position:fixed;top:0;will-change:transform;-webkit-transition:-webkit-transform .2s linear;transition:-webkit-transform .2s linear;-o-transition:transform .2s linear;transition:transform .2s linear;transition:transform .2s linear,-webkit-transform .2s linear}.headroom--pinned{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.headroom--unpinned{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.header{padding:20px 30px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.header{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}.header .logo-container{width:200px;height:60px}.header .logo{width:100%;height:100%;-o-object-fit:contain;object-fit:contain}.header .nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header .nav-list{margin:0 20px;padding:0;list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.header .nav-list{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}}.header .list-item{position:relative;padding:0 5px}.header .item-link{display:block;cursor:pointer}.header .item-link.active{color:#3ec2ba}.header .item-link:hover{color:#3ec2ba}.header .nuv-sublist{display:none;list-style:none;min-width:100%;padding:20px 5px 10px;background-color:#fff;position:absolute;top:100%;left:0;z-index:20}.header .sublist-item{display:block}.header .sublist-item:not(:last-child){margin-bottom:10px}.header .subitem-link{white-space:nowrap;display:block}.header .subitem-link.active{color:#3ec2ba}.header .subitem-link:hover{color:#3ec2ba}.header .list-item:hover>.nuv-sublist{display:block}.footer-wrapper{position:relative;padding:40px 0;width:100%}.footer-wrapper:before{content:'';position:absolute;top:40px;height:1px;width:100%;background-color:rgba(51,51,51,.15)}.footer-wrapper:after{content:'';position:absolute;bottom:40px;height:1px;width:100%;background-color:rgba(51,51,51,.15)}.footer{padding:10px 0;text-align:center;font-weight:700}.footer .copyright{margin-bottom:10px}.footer .addr-item{display:block;font-style:normal}.footer .addr-item:not(:last-child){margin-bottom:10px}.modal{display:none}.vanilla-modal .modal{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:auto;position:fixed;top:0;left:0;width:100%;height:100%;min-height:100vh;background-color:rgba(0,0,0,.7);z-index:-1;opacity:0;-webkit-transition:opacity .5s,z-index 0s .5s;-o-transition:opacity .5s,z-index 0s .5s;transition:opacity .5s,z-index 0s .5s}.modal-visible .modal{z-index:99;opacity:1;-webkit-transition:opacity .5s;-o-transition:opacity .5s;transition:opacity .5s}.modal-inner{position:relative;width:100%;max-width:1200px;max-height:100vh}@media (min-width:768px){.modal-inner{width:80%}}.close-modal{display:block;position:absolute;top:0;right:0;width:60px;height:60px;padding:10px;background-color:transparent}.close-icon{width:100%;height:100%;background:url(img/cancel.svg)}.modal-content{overflow:auto;background-color:#fff}.main{padding:100px 0 0}.about-wrapper{background-color:#5fb0ee}.about{padding:80px 40px 120px}@media (min-width:768px){.about{padding:80px 20% 120px}}.about .about-title{font-size:48px;color:#fff;text-align:center;margin-bottom:50px}.about .img-container{width:240px;height:140px;max-width:100%;margin:0 auto 50px;border-radius:50%;overflow:hidden}@media (min-width:768px){.about .img-container{width:400px;height:233px}}.about .about-img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:center center;object-position:center center}.about .about-text{font-size:20px;line-height:1.5}.services-wrapper{background-color:rgba(127,127,127,.5);position:relative;overflow:hidden}.services-wrapper .services{z-index:10;padding:80px 40px 120px}.services-wrapper .parallax_scene0,.services-wrapper .parallax_scene1,.services-wrapper .parallax_scene2{position:absolute;z-index:-5}.services-wrapper .services-main-title{font-size:48px;color:#fff;margin-bottom:50px}.services-wrapper .services-title{font-size:40px;color:#fff}.services-wrapper .services-title:not(:last-child){margin-bottom:20px}.check{padding:80px 10% 120px;text-align:center}.check .check-title{font-size:48px;color:#000;margin-bottom:40px}.check .check-text{margin-bottom:60px}.graphic-wrapper{background-color:#fff}.graphic{padding:100px 40px}.graphic .graphic-title{font-size:48px;color:#000;text-align:center;margin-bottom:100px;text-transform:capitalize;overflow:hidden}.graphic .title-text{position:relative;display:inline-block;padding-bottom:20px}.graphic .title-text:after{content:'';position:absolute;bottom:0;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);height:5px;width:120%;background-color:#fff}.graphic .subtitle{font-size:40px;color:#000;text-align:center;margin-bottom:40px}.graphic .panels{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media (min-width:768px){.graphic .panels{-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly}}@media (min-width:1300px){.graphic .panels{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}.graphic .panel-item{display:block;margin-bottom:50px;-webkit-box-flex:0;-ms-flex:0 1 100%;flex:0 1 100%}@media (min-width:768px){.graphic .panel-item{-webkit-box-flex:0;-ms-flex:0 1 40%;flex:0 1 40%}}@media (min-width:1300px){.graphic .panel-item{-webkit-box-flex:0;-ms-flex:0 1 20%;flex:0 1 20%}}.graphic .raised{position:relative;width:40%;padding:1em;margin:2em 10px 4em;background-color:rgba(225,225,225,.5);-webkit-transition:background-color .6s ease-in-out;-o-transition:background-color .6s ease-in-out;transition:background-color .6s ease-in-out;-webkit-box-shadow:0 1px 4px rgba(0,0,0,.3),0 0 40px rgba(0,0,0,.1) inset;box-shadow:0 1px 4px rgba(0,0,0,.3),0 0 40px rgba(0,0,0,.1) inset;-webkit-box-shadow:0 15px 10px -10px rgba(0,0,0,.5),0 1px 4px rgba(0,0,0,.3),0 0 40px rgba(0,0,0,.1) inset;box-shadow:0 15px 10px -10px rgba(0,0,0,.5),0 1px 4px rgba(0,0,0,.3),0 0 40px rgba(0,0,0,.1) inset}.graphic .raised:hover{background-color:rgba(50,50,50,.5)}.graphic .raised:after,.graphic .raised:before{content:"";position:absolute;z-index:-2}.graphic .item-container{overflow:hidden;position:relative}.graphic .adapt-container{position:relative;overflow:hidden;padding-bottom:100%;-webkit-transition:-webkit-transform .6s ease-in-out;transition:-webkit-transform .6s ease-in-out;-o-transition:transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out}.graphic .panel-item:hover .adapt-container{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.graphic .panel-image{position:absolute;width:100%;height:100%;-o-object-fit:contain;object-fit:contain;-o-object-position:center center;object-position:center center}.graphic .item-text{position:absolute;top:0;left:0;right:0;bottom:0;padding:0 10px;font-size:24px;line-height:1.2;color:#666;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);-webkit-transition:-webkit-transform .6s ease-in-out;transition:-webkit-transform .6s ease-in-out;-o-transition:transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out}.graphic .panel-item:hover .item-text{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.graphic .panel-name{padding:20px 10px 0;font-size:32px;line-height:1.5;color:#666;text-transform:capitalize;text-align:center}@media (min-width:1300px){.graphic .panel-name{padding:30px 10px 0}}.analiz-wrapper{background-color:#fff}.analiz{overflow:auto;padding:80px 0 120px}.analiz .analiz-title{font-size:48px;color:#000;text-align:center;margin-bottom:50px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
